1. 3-5 prostych zapytań do jednej tablicy

	a) Wymień części, których stan przekracza 10 sztuk.
	SELECT nazwa_czesci, stan FROM Warsztat WHERE stan > 10;

	b) Wymień średnie zarobki na stanowiskach.
	SELECT stanowisko, AVG(zarobki) FROM PRACOWNICY GROUP BY stanowisko;

	c) Wymień zarejestrowane kobiety jako kierowcy.
	SELECT imie, nazwisko FROM KIEROWCA WHERE nazwisko LIKE '%a';

2. 3-5 zapytań do kilku tablic z użyciem JOIN

	a) Wypisz na jakim torze odbywały się "zawody kartingowe J".
	SELECT ZAWODY.nazwa_zawodow, TORY.nazwa FROM ZAWODY INNER JOIN TORY ON ZAWODY.id_toru = TORY.id_toru WHERE nazwa_zawodow LIKE 'Zawody Kartingowe J';

	b) Uporządkuj kierowców po ilości ich wygranych.
	SELECT KIEROWCA.imie, KIEROWCA.nazwisko, WYNIKI.wygrane AS 'ilosc zwyciestw' FROM WYNIKI INNER JOIN KIEROWCA ON WYNIKI.id_kierowcy = KIEROWCA.id_kierowcy ORDER BY wygrane DESC;

	c)Wskaż Zawody z najdłuższym torem.
	SELECT TOP 1 ZAWODY.nazwa_zawodow AS 'zawody z najdluzszym torem', TORY.dlugosc AS 'metry' FROM ZAWODY INNER JOIN TORY ON ZAWODY.id_toru = TORY.id_toru ORDER BY TORY.dlugosc DESC;

3. 3-5 zapytań do kilku tablic z użyciem LEFT JOIN

	a) Wymień wszystkie części dla gokartów z pojemnością między 210 a 300 i powyżej 125 KM.
	SELECT nazwa_czesci FROM GOKART LEFT JOIN Warsztat ON Warsztat.id_gokart = GOKART.id_gokart WHERE pojemnosc >= 210 AND pojemnosc <= 300 AND moc > 125;

	b) Wyświetl, jakie stanowiska przyjęły najwięcej rezerwacji.
	SELECT PRACOWNICY.stanowisko, COUNT(REZERWACJE.id_pracownika) AS 'ilosc rezerwacji' FROM PRACOWNICY LEFT JOIN REZERWACJE ON REZERWACJE.id_pracownika = PRACOWNICY.id_pracownika GROUP BY PRACOWNICY.stanowisko;

	c) Oblicz ilość punktów zdobytych przez kierowców, na punkty składają się wyniki zapisane w tabeli WYNIKI. top_5 to 1 punkt, top_3 to 5 punktów, wygrana to 10 puntków, pole postion do 1 punkta a best lap do 1 punkt. Wyniki mają być posortowane malejonco celem wskazania najlepszego kierowcy.
	SELECT
    KIEROWCA.imie,
    KIEROWCA.nazwisko,
    SUM(
        WYNIKI.top_5 * 1 +
        WYNIKI.top_3 * 5 +
        WYNIKI.wygrane * 10 +
        WYNIKI.pole_position * 1 +
        WYNIKI.best_lap * 1
    ) AS 'suma punktow'
FROM
    KIEROWCA
LEFT JOIN
    WYNIKI ON KIEROWCA.id_kierowcy = WYNIKI.id_kierowcy
GROUP BY
    KIEROWCA.id_kierowcy, KIEROWCA.imie, KIEROWCA.nazwisko
ORDER BY
    'suma punktow' DESC;

4. 3-5 zapytań z podzapytaniem w części SELECT

	a) Wymień zwycięstwów w zawodach.
	SELECT ZAWODY.nazwa_zawodow, 
       (SELECT KIEROWCA.imie
        FROM KIEROWCA 
        WHERE KIEROWCA.id_kierowcy = (SELECT WYNIKI_ZAWODOW.id_kierowcy_1 
                                       FROM WYNIKI_ZAWODOW 
                                       WHERE ZAWODY.id_zawodow = WYNIKI_ZAWODOW.id_zawodow)) AS 'IMIE',
       (SELECT KIEROWCA.nazwisko 
        FROM KIEROWCA 
        WHERE KIEROWCA.id_kierowcy = (SELECT WYNIKI_ZAWODOW.id_kierowcy_1 
                                       FROM WYNIKI_ZAWODOW 
                                       WHERE ZAWODY.id_zawodow = WYNIKI_ZAWODOW.id_zawodow)) AS 'NAZWISKO'
FROM ZAWODY;

	b) Podaj wiek kierowcy z najwyższą ilością zwycięstw.
	SELECT TOP 1
  (SELECT TOP 1 2024 - YEAR(data_urodzenia) AS WIEK FROM kierowca ORDER BY WIEK DESC) AS WIEK,
  WYNIKI.Wygrane
FROM WYNIKI
ORDER BY WYNIKI.Wygrane DESC;

	c) Znajdź zawody z najwolniejszym gokartem (z gokartem z najmniejszą ilością mocy).
	SELECT TOP 1 ZAWODY.nazwa_zawodow, (SELECT GOKART.moc FROM GOKART WHERE ZAWODY.id_gokart = GOKART.id_gokart) AS 'MOC' FROM ZAWODY ORDER BY MOC;

5. zapytań z podzapytaniem w części FROM

	a) Podaj średnią wagę gokartów.
	SELECT AVG(podzapytanie.waga) AS srednia_waga
FROM (
  SELECT waga
  FROM GOKART
) AS podzapytanie;

	b) Pobierz informacje o pracownikach i ich zarobkach, gdzie zarobki przekraczają średnią zarobków.
	SELECT p.id_pracownika, p.imie, p.nazwisko, p.zarobki
FROM PRACOWNICY p
JOIN (SELECT AVG(zarobki) AS srednia_zarobkow_pracownikow FROM PRACOWNICY) srednia_zarobkow
ON 1=1
WHERE p.zarobki > srednia_zarobkow.srednia_zarobkow_pracownikow;

6. zapytań z podzapytaniem w części WHERE

	a) Znajdź wszystkie tory, na których odbyły się treningi.
	SELECT *
FROM TORY
WHERE id_toru IN (SELECT DISTINCT id_toru FROM TRENING);

	b) Znajdź wszystkie gokarty, których moc przekracza średnią moc wszystkich gokartów.
	SELECT *
FROM GOKART
WHERE moc > (SELECT AVG(moc) FROM GOKART);

	c)Znajdź kierowców, którzy zajęli 3 miejsce więcej niż 5 razy.
	SELECT KIEROWCA.imie, KIEROWCA.nazwisko
FROM KIEROWCA
WHERE id_kierowcy IN (
    SELECT id_kierowcy
    FROM WYNIKI
    WHERE top_3 > 5
);

	

